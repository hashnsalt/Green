{"version":3,"sources":["main.scss"],"names":[],"mappings":"AAAC;EAAG,SAAA;EAAW,UAAA;;;AACd;EAAI,gBAAA;;;AAmGL;EAnDE,uBAAA;EAAyB,sBAAA;EACzB,sBAAA;EAUA,YA0Cc;EA1CC,aA0CM;EAErB,aAAA;;AAEA;EAzDA,uBAAA;EAAyB,sBAAA;EACzB,sBAAA;EAUA,YAgDgB;EAhDD,aAgDQ;EAErB,oBAAA;;AADA;EAAS,cAAA;;AAKP;EAEE,4DAAA;EACA,sBAAA;;AAEF;EACE,4DAAA;EACA,sBAAA;;AAPF;EAEE,4DAAA;EACA,sBAAA;;AAEF;EACE,4DAAA;EACA,sBAAA;;AAPF;EAEE,4DAAA;EACA,sBAAA;;AAEF;EACE,4DAAA;EACA,sBAAA","file":"main.39afc03c.css","sourceRoot":"..","sourcesContent":[" * {margin: 0; padding: 0;}\r\n li {list-style: none;}\r\n\r\n $color_p: #8869ed; //전역변수\r\n\r\n// .container {\r\n//   //자식 표기\r\n//   width: 500px;\r\n//   height: 300px;\r\n//   background-color: #ccc;\r\n//   margin: 0 auto;\r\n\r\n\r\n//   > h1 {  //자식 표기 '>' 콘테이너 바로 밑에 있는 h1번에 적용이 된다. '>'써주지 않으면 콘테이너 밑의 모든 h1번에 적용이 된다.\r\n//     color: blue;\r\n//   }\r\n\r\n//   ul {\r\n//     > h1 {\r\n//       font-size: 20px;\r\n//     }\r\n//     li {  //자식 표기\r\n//       width: 100px;\r\n//       height: 50px;\r\n//       border: 1px solid black;\r\n//       text-align: center;\r\n//       line-height: 50px;\r\n//       &:nth-child(2) {\r\n//         // '&' 블럭의 주인을 가르킴 li들 중에서 2번째.\r\n//         margin: 5px 0;\r\n//       }\r\n//       &.first {\r\n//         // 블럭의 주인중에서 first를 가지고 있는 블럭에 스타일 설정.\r\n//         color: red;\r\n//       }\r\n//       // font-size: 14px;\r\n//       // font-weight: bold; //대신에\r\n//       font: {\r\n//         // 속성: 이렇게 쓰는걸 네임스페이스(namespace)라고 부름. 사용범위 적용 범위. font- size, weight 괄호 닫은 후 세미콜론(;) 생략하면 안됨.\r\n//         size: 14px;\r\n//         weight: bold;\r\n//       };\r\n\r\n//     }\r\n//   }\r\n// }\r\n\r\n@mixin test {\r\n  //@mixin: 스타일을 미리 정의해 놓는 쿼리.\r\n  border: 1px solid black; box-sizing: border-box;\r\n  background-color: #ccc;\r\n}\r\n\r\n// $width: 800px;\r\n// $height: 300px;\r\n// 변수를 사용. 변수 앞에는 반드시 '&'를 붙여 줘야함.\r\n// $color-Point, $color-sub, $color-main 처럼 많이 사용하는 컬러들을 변수로 지정해 사용할 수도 있음.\r\n\r\n@mixin size($width, $height) {\r\n  // 미리 스타일을 정의해 놓은 mixin 쿼리를 변수로 쓸수도 있음. \r\n  width: $width; height: $height;\r\n}\r\n\r\n// @function center($width) {\r\n//   // fixed후 left 시킨 것을 가운데 정렬시키기 위한 함수처리.\r\n//   // @return ($width / 2) * -1 //이렇게 쓰고 저장하면 calc를 쓰라고 권고문이 뜸. \r\n//   @return calc($width / 2 * -1); //refactoring 리펙토링이라고 부름. 결과는 변화는 없지만 코드자체가 변경이 됨(여기서는 calc를 써주는걸로 변경).\r\n// }\r\n\r\n\r\n// .container {\r\n//   // $color_p : #8869ed; //지역 변수가 됨.\r\n//   // width: 800px; height: 500px;\r\n//   // width: $width; height: $height; \r\n//   // 변수로 지정해 놓은 값을 불러올 수도 있음.\r\n//   position: fixed;\r\n//   // top: 100px + 50px; //사칙 연산 가능. 하지만 나누기는 스타일 시트 옵션에서 사용하는 기호이므로 오류가발생 한다. 하지만 단위는 같아야함. 예시) 100px - 50% 이렇게 쓰면 안됨.\r\n//   // background: color url position /size repeat attachmenet 로 한번에 쓸 수 있음. 하지만 비추. 여기서쓰는 /때문에 function문에 사칙연산 중 /를 쓰면 command 권고문이 뜨는 것임.\r\n//   top: 100px;\r\n//   left: 50%;\r\n//   margin-left: center(620px);\r\n//   //함수 호출.\r\n//   @include size(620px, 300px);\r\n//   //지정해 놓은 변수의 사이즈명을 넣는 매개변수 스타일로 적용할 수 있음.\r\n//   @include test;\r\n//     //@include 먼저 만들어놓은 mixin을 가져옴.\r\n//   background-color: $color_p;\r\n//   display: flex;\r\n\r\n//   div {\r\n//     @include size(200px, 200px);\r\n//     @include test;\r\n\r\n//     &:nth-child(2) {\r\n//       // &.box02 로 줘도 됨.\r\n//       margin: 0 10px;\r\n//     }\r\n//   }\r\n// }\r\n\r\n.container {\r\n  @include test;\r\n  @include size(620px, 200px);\r\n\r\n  display: flex;\r\n  \r\n  .box {\r\n    @include test;\r\n    @include size(200px, 200px);\r\n    &.box02 {margin: 0 10px;};\r\n    transition: all 0.3s;\r\n\r\n    @for $i from 1 through 3 {\r\n      //for는 i라는 변수를 이용해서 1부터 3까지 돌아가겠다.\r\n      &:nth-child(#{$i}) {\r\n        //nth-child 아래는 문자열이 들어가야함. 자바스크립트에서는 문자열을 써주기 위해 q백틱기호를 써줘야 하지만, 여기서는 백틱 기호 대신 #을 써줌.\r\n        background-image: url(./images/new0#{$i}_off.jpg);\r\n        background-size: cover;\r\n      }\r\n      &:nth-child(#{$i}):hover {\r\n        background-image: url(./images/new0#{$i}_on.jpg);\r\n        background-size: cover;\r\n      }\r\n    }\r\n  }\r\n\r\n}"]}